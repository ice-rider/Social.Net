services:
    webapi:
        build:
            context: ./Back
            dockerfile: Dockerfile
        ports:
            - "8080:8080"
        container_name: messenger_web_api
        depends_on:
            - db
    frontend:
        build:
            context: ./Front
            dockerfile: Dockerfile
        ports:
            - "3000:3000"
        command: npm start
        container_name: messenger_frontend
        depends_on:
            - webapi
    nginx:
        image: nginx:latest
        volumes:
            - "./config/nginx.conf:/etc/nginx/conf.d/default.conf"
            - "./config/server.crt:/etc/nginx/ssl/server.crt"
            - "./config/server.key:/etc/nginx/ssl/server.key"
        depends_on:
            - webapi
            - frontend
        ports:
            - "443:443"
            - "80:80"
    db:
        image: postgres:latest
        ports:
            - "5432:5432"
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: 1355
            POSTGRES_DB: Messenger
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 5s
            timeout: 5s
            retries: 5
        volumes:
            - db_data:/var/lib/postgresql/data
        container_name: db_postgresql_container
volumes:
    db_data: